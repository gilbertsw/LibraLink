# Server
server:
  port: 8080
  url: ${SERVER_URL:http://localhost:8080}
  error:
    include-message: always
    whitelabel:
      enabled: false


# Spring
spring:
  application:
    name: libralink
  banner:
    location: classpath:banner/libralink_banner.txt
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:root}
  datasource:
    main:
      driver-class-name: org.mariadb.jdbc.Driver
      url: ${MYSQL_JDBC_URL:jdbc:mariadb://localhost:3306/LibraLinkDB}
      password: ${MYSQL_PASSWORD:root}
      username: ${MYSQL_USER:root}
      name: ${MYSQL_DATABASE:LibraLinkDB}


# Security
security:
  rsa:
    private-key: classpath:certs/rsa.private.key
    public-key: classpath:certs/rsa.public.key
  jwt:
    issuer: ${JWT_ISSUER:gefami.co.id}
    expiry-minutes: ${JWT_EXPIRY_MINUTES:1440}


# Logging
logging:
  level:
    root: warn
    com.fasterxml.jackson: debug
    springframework.web: debug
    org.hibernate: error
  file:
    name: libralink.log
    path: /var/log


# SpringDoc
springdoc:
  api-docs:
    path: /api-docs
    enabled: true
  swagger-ui:
    enabled: true
    operationsSorter: method
    tagsSorter: alpha


# Endpoint Management
endpoint:
  config:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:*}
    allowed-headers: ${CORS_ALLOWED_HEADERS:*}
    allowed-methods: ${CORS_ALLOWED_METHODS:*}
    allow-credentials: ${CORS_ALLOWED_CREDENTIALS:true}

  management:
    actuator: /actuator/**
    swagger: /swagger-ui.html, /swagger-ui/**, /api-docs/**
    auth: ${endpoint.url.v1}${endpoint.auth.base}/**,
      ${endpoint.url.v2}${endpoint.auth.base}/**

  api:
    context: /api
    version:
      v1: /v1
      v2: /v2

  url:
    v1: ${endpoint.api.context}${endpoint.api.version.v1}
    v2: ${endpoint.api.context}${endpoint.api.version.v2}

  auth:
    base: /auth
    register: /register
    login: /login

  admin:
    base: /admin
    user-security-policy: ${endpoint.admin.base}/user-security-policies
    users: ${endpoint.admin.base}/users
    book: ${endpoint.admin.base}/books
    borrowing: ${endpoint.admin.base}/borrowings

  user:
    base: /user
    users: ${endpoint.user.base}/users
    book: ${endpoint.user.base}/books
    borrowing: ${endpoint.user.base}/borrowings

  users:
    id: /{id:[0-9]+}
    me: /me

  book:
    id: /{id:[0-9]+}

  borrowing:
    id: /{id:[0-9]+}
    me: /me
